//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Coach.ServiceOG._Data._CoachModel
{
    using System;
    using System.Collections.Generic;
    
    public partial class logitemfield
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public logitemfield()
        {
            this.logentry_logitemfield = new HashSet<logentry_logitemfield>();
            this.logitemfield_keyvalue = new HashSet<logitemfield_keyvalue>();
        }
    
        public int idLogItemField { get; set; }
        public int idLogItem { get; set; }
        public int idType_Data { get; set; }
        public int idType_Field { get; set; }
        public string name { get; set; }
        public string attributes { get; set; }
        public string description { get; set; }
        public string notes { get; set; }
        public Nullable<int> position { get; set; }
        public bool isActive { get; set; }
        public System.DateTime createdAt { get; set; }
        public System.DateTime updatedAt { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<logentry_logitemfield> logentry_logitemfield { get; set; }
        public virtual logitem logitem { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<logitemfield_keyvalue> logitemfield_keyvalue { get; set; }
        public virtual type type { get; set; }
        public virtual type type1 { get; set; }
    }
}
